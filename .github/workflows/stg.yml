name: CI/CD for Django App on AWS

on:
  push:
    branches:
      - master0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code to integration branch on dashbaord
      uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    
    - name: Log in to Amazon ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image 
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        ECR_REPOSITORY: bhanu-insights
        IMAGE_TAG: v0.0.03 
      run: |
        IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker build -t $IMAGE_URI ./insightsol
        docker push $IMAGE_URI
        echo "::set-output name=image::$IMAGE_URI"

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ./insightsol/ecs-task-definition.json
        container-name: django-ecr
        image: ${{ steps.build-image.outputs.image }}    
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: bhanu-insight-ecs-deploy-service
        cluster: ${{ secrets.ECS_CLUSTER }}
        image: ${{ steps.build-image.outputs.image }}
        wait-for-service-stability: true    